{"version":3,"sources":["Popup.js","App.js","index.js"],"names":["Popup","useState","id","className","QuestionArr","question","answer0","answer1","answer2","answer3","correct","this","correctAnswer","questions","Array","console","log","App","colors","qNum","setQNum","state","setState","isRed","setRed","color","setColor","popAnswer","answer","alert","onClick","document","getElementById","scrollIntoView","class","i","pop","toggle","target","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.33c0ea95.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Popup.css';\n\nfunction Popup() {\n    const show = () => {\n        document.getElementById(\"pop\").style.display = \"block\";\n    };\n\n    \n\n    const [displayType, setDisplay] = useState(\"none\");\n    const [text, setText] = useState(\"Try again!\")\n    \n\n    return (\n        <div id=\"pop\" className=\"modal\">\n          <span className=\"close\">&times;</span>\n          <div className=\"modal-content\">\n            <p>That's right!</p>\n          </div>\n        </div>\n    )\n}\n\nexport default Popup;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Popup from './Popup.js';\n\nclass QuestionArr {\n    /**question: String of question\n     * answers: array containing the four answer choices\n     * correctAnswer: int (0-3) of which answer is correct\n     */\n    constructor(question, answer0, answer1, answer2, answer3, correct){\n      this.question = question;\n      this.answer0 = answer0;\n      this.answer1 = answer1;\n      this.answer2 = answer2;\n      this.answer3 = answer3;\n      this.correctAnswer = correct;\n    }\n  }\n  \n\n\n  const questions = Array(10);\n  questions[0] = new QuestionArr(\"On average, how much does an ambulance cost in the US?\",\"$45\",\"$450\", \"$1000\", \"$2300\", 3);\n  questions[1] = new QuestionArr(\"On average, how much does an ambulance cost in Canada?\",\"$45\",\"$450\", \"$1000\", \"$2300\", 1);\n  questions[2] = new QuestionArr(\"How much does the average American spend on prescription and non-prescription medications annually?\", \"$75\", \"$500\", \"$1200\", \"$1500\", 3);\n  questions[3] = new QuestionArr(\"How much does the average UK resident spend on prescription and non-prescription medications annually?\",\"$75\", \"$500\", \"$1200\", \"$1500\", 2);\n  questions[4] = new QuestionArr(\"What is the average cost of one EpiPen in the US?\",\"$150\", \"$300\", \"$500\", \"$700\", 4);\n  questions[5] = new QuestionArr(\"What is the average cost of one EpiPen in Canada?\",\"$150\", \"$300\", \"$500\", \"$700\", 1);\n  questions[6] = new QuestionArr(\"What is the average out of pocket monthly type 1 diabetes cost in the US?\",\"$15\", \"$65\", \"$180\", \"$360\", 4);\n  questions[7] = new QuestionArr(\"What is the average out of pocket monthly type 1 diabetes cost in the UK?\",\"$15\", \"$65\", \"$180\", \"$360\", 2);\n\n  console.log(questions[0]);\n  \n\nfunction App() {\n\n    //color variable to match with answers\n    let colors = [\"\", \"blue\", \"blue\", \"blue\", \"blue\"];\n\n    /**\n     * qNum is the question number we are on\n     */\n    let [qNum, setQNum] = useState(0);\n    let [state, setState] = useState(false);\n    const [isBlue, setBlue] = useState(true);\n    const [isRed, setRed] = useState(false);\n    let [color, setColor] = useState(colors);\n\n    \n    \n\n    const changeColor = (answer, newColor) => {\n        setColor(colors[answer] = newColor);\n    }\n\n    /**\n     * Hook to increment qNum by 1,\n     * changing the question to the next question\n     */\n    const nextQ = () => {\n        if (qNum === 7) {\n            document.getElementById('conclusion').scrollIntoView();\n        } else {\n            document.getElementById('question').scrollIntoView();\n            setQNum(qNum + 1);\n        }\n\n        for(let i =1; i <=4; i++){\n            //colors[i] = \"blue\";\n            setColor(i, \"red\");\n        }\n    };\n\n    const previousQ = () => {\n        if (qNum === 0) {\n            document.getElementById('intro').scrollIntoView();\n        } if (qNum > 0) {\n            document.getElementById('question').scrollIntoView();\n            setQNum(qNum - 1);\n        }\n        for(let i =1; i <=4; i++){\n            //colors[i] = \"blue\";\n            setColor(i, \"green\");\n        }\n    };\n    \n\n    // let state = {\n    //     seen: false\n    // };\n    \n\n    const togglePop = () => {\n        setState(!state);\n    };\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * should send popup when an answer is clicked\n     */\n    function popAnswer(answer) {\n         setState(true);\n         \n        if(answer === questions[qNum].correctAnswer){\n            //correct answer chosen\n            colors[answer] = \"green\";\n            setColor(answer, \"green\");\n            alert(\"That's right!\");\n            \n        } else {\n            //incorrect answer chosen\n            colors[answer] = \"red\";\n            setColor(answer, \"red\");\n            alert(\"Try again!\");\n\n        }\n        //window.location.reload(true);\n        setRed(!isRed);\n        console.log(colors[answer]);\n    };\n\n    return (        \n        <div className=\"slides\">\n            <div id=\"intro\">\n                <h2 id=\"spacing\">That costs what?</h2>\n                <h3 id=\"spacing2\">Healthcare Trivia Game</h3>\n                <p>Test your knowledge and see how healthcare prices in the United States compare to other countries.</p>\n                <button className=\"blue\" id=\"start\" onClick={()=>document.getElementById('question').scrollIntoView()}>Start</button>\n            </div>\n            <div id=\"question\">\n                \n                <h3>{questions[qNum].question}</h3>\n                <section className=\"buttonGrid\">\n                    <section className=\"grid-4\">\n                    <button className={color[1]} onClick={()=>popAnswer(1)}> {questions[qNum].answer0}</button>\n                    <button className={color[2]} onClick={()=>popAnswer(2)}> {questions[qNum].answer1}</button>\n                    <button className={color[3]} onClick={()=>popAnswer(3)}> {questions[qNum].answer2}</button>\n                    <button className={color[4]} onClick={()=>popAnswer(4)}> {questions[qNum].answer3}</button>\n                    <button class=\"change\" onClick={previousQ}>Back</button>\n                    <button class=\"change\" onClick={nextQ}>Next</button>\n                    <Popup pop={popAnswer}/>\n                    <div>\n                    {/* <div className=\"btn\" onClick={this.togglePop}>\n                    <button>New User?</button>\n                    </div> */}\n                    {state ? <Popup toggle={togglePop} /> : null}\n                    </div>\n                    </section>\n                </section>\n            </div>\n            <div id=\"conclusion\">\n                <h2 id=\"spacing3\">Thanks for playing!</h2>\n                <h4>For more information, check out these links:</h4>\n                <ul>\n                    <li><a target=\"_blank\" href=\"https://www.forbes.com/sites/nextavenue/2019/10/25/what-broke-american-health-care-and-how-to-fix-it/?sh=57aebd5147ed\">Forbes: What Broke American Health Care And How To Fix It</a></li>\n                    <li><a target=\"_blank\" href=\"https://www.pgpf.org/blog/2020/07/how-does-the-us-healthcare-system-compare-to-other-countries\">PGPF: How Does The U.S. Healthcare System Compare To Other Countries?</a></li>\n                    <li><a target=\"_blank\" href=\"https://data.oecd.org/healthres/pharmaceutical-spending.htm#indicator-chart\">OECD: Global Pharmaceutical Spending Chart</a></li>\n                    <li><a target=\"_blank\" href=\"https://www.bbc.com/news/world-us-canada-47491964\">BBC: The Human Cost of Insulin in America</a></li>\n                </ul>\n                <button className=\"blue\" id=\"back\" onClick={()=>document.getElementById('question').scrollIntoView()}>Previous</button>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}